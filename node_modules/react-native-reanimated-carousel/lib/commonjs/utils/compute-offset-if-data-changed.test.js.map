{"version":3,"sources":["compute-offset-if-data-changed.test.ts"],"names":["describe","size","it","index","result","direction","previousLength","currentLength","handlerOffset","expect","toMatchInlineSnapshot"],"mappings":"AAAA,4EAEAA,QAAQ,CAAC,4BAAD,CAA+B,UAAM,CAC3C,GAAMC,CAAAA,IAAI,CAAG,GAAb,CACAC,EAAE,CAAC,iDAAD,CAAoD,UAAM,CAC1D,GAAMC,CAAAA,KAAK,CAAG,CAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,2DAA2B,CACxCC,SAAS,CAAE,CAAC,CAD4B,CAExCC,cAAc,CAAE,CAFwB,CAGxCC,aAAa,CAAE,CAHyB,CAIxCN,IAAI,CAAJA,IAJwC,CAKxCO,aAAa,CAAEL,KAAK,CAAGF,IALiB,CAA3B,CAAf,CAQAQ,MAAM,CAACL,MAAD,CAAN,CAAeM,qBAAf,CAAqC,GAArC,EACD,CAXC,CAAF,CAaAR,EAAE,CAAC,iDAAD,CAAoD,UAAM,CAC1D,GAAMC,CAAAA,KAAK,CAAG,CAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,2DAA2B,CACxCC,SAAS,CAAE,CAAC,CAD4B,CAExCC,cAAc,CAAE,CAFwB,CAGxCC,aAAa,CAAE,CAHyB,CAIxCN,IAAI,CAAJA,IAJwC,CAKxCO,aAAa,CAAEL,KAAK,CAAGF,IALiB,CAA3B,CAAf,CAQAQ,MAAM,CAACL,MAAD,CAAN,CAAeM,qBAAf,CAAqC,KAArC,EACD,CAXC,CAAF,CAYD,CA3BO,CAAR","sourcesContent":["import { computeOffsetIfDataChanged } from \"./compute-offset-if-data-changed\";\n\ndescribe(\"computeOffsetIfDataChanged\", () => {\n  const size = 634;\n  it(\"should return the correct values, if index is 0\", () => {\n    const index = 0;\n    const result = computeOffsetIfDataChanged({\n      direction: -1,\n      previousLength: 4,\n      currentLength: 6,\n      size,\n      handlerOffset: index * size,\n    });\n\n    expect(result).toMatchInlineSnapshot(\"0\");\n  });\n\n  it(\"should return the correct values, if index is 1\", () => {\n    const index = 1;\n    const result = computeOffsetIfDataChanged({\n      direction: -1,\n      previousLength: 4,\n      currentLength: 6,\n      size,\n      handlerOffset: index * size,\n    });\n\n    expect(result).toMatchInlineSnapshot(\"634\");\n  });\n});\n"]}