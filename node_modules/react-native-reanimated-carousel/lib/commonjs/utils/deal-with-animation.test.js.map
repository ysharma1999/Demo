{"version":3,"sources":["deal-with-animation.test.ts"],"names":["jest","mock","withSpring","fn","value","_config","callback","withTiming","describe","beforeEach","clearAllMocks","it","springConfig","damping","stiffness","animation","type","config","result","expect","toHaveBeenCalledWith","any","Function","toBe","timingConfig","duration","mass","objectContaining"],"mappings":"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","sourcesContent":["import { withSpring, withTiming } from \"react-native-reanimated\";\n\nimport { dealWithAnimation } from \"./deal-with-animation\";\n\n// Mock Reanimated\njest.mock(\"react-native-reanimated\", () => ({\n  withSpring: jest.fn((value, _config, callback) => {\n    callback?.(true);\n    return value;\n  }),\n  withTiming: jest.fn((value, _config, callback) => {\n    callback?.(true);\n    return value;\n  }),\n}));\n\ndescribe(\"dealWithAnimation\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it(\"should handle spring animation\", () => {\n    const callback = jest.fn();\n    const springConfig = {\n      damping: 20,\n      stiffness: 90,\n    };\n\n    const animation = dealWithAnimation({\n      type: \"spring\",\n      config: springConfig,\n    });\n\n    const result = animation(100, callback);\n\n    expect(withSpring).toHaveBeenCalledWith(100, springConfig, expect.any(Function));\n    expect(callback).toHaveBeenCalledWith(true);\n    expect(result).toBe(100);\n  });\n\n  it(\"should handle timing animation\", () => {\n    const callback = jest.fn();\n    const timingConfig = {\n      duration: 300,\n    };\n\n    const animation = dealWithAnimation({\n      type: \"timing\",\n      config: timingConfig,\n    });\n\n    const result = animation(100, callback);\n\n    expect(withTiming).toHaveBeenCalledWith(100, timingConfig, expect.any(Function));\n    expect(callback).toHaveBeenCalledWith(true);\n    expect(result).toBe(100);\n  });\n\n  it(\"should pass animation config correctly\", () => {\n    const springConfig = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n    };\n\n    const animation = dealWithAnimation({\n      type: \"spring\",\n      config: springConfig,\n    });\n\n    animation(100, jest.fn());\n\n    expect(withSpring).toHaveBeenCalledWith(\n      100,\n      expect.objectContaining(springConfig),\n      expect.any(Function)\n    );\n  });\n\n  it(\"should handle animation completion\", () => {\n    const callback = jest.fn();\n    const animation = dealWithAnimation({\n      type: \"timing\",\n      config: { duration: 300 },\n    });\n\n    animation(100, callback);\n\n    expect(callback).toHaveBeenCalledWith(true);\n  });\n});\n"]}