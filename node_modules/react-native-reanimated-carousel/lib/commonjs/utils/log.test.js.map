{"version":3,"sources":["log.test.ts"],"names":["describe","mockConsoleLog","jest","fn","originalConsoleLog","console","log","beforeEach","afterEach","mockClear","it","args","key","expect","toHaveBeenCalledWith","toBe","Number","NEGATIVE_INFINITY","Math","PI"],"mappings":"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","sourcesContent":["import { log, round } from \"./log\";\n\ndescribe(\"log utilities\", () => {\n  describe(\"log\", () => {\n    const mockConsoleLog = jest.fn();\n    const originalConsoleLog = console.log;\n\n    beforeEach(() => {\n      console.log = mockConsoleLog;\n    });\n\n    afterEach(() => {\n      mockConsoleLog.mockClear();\n      console.log = originalConsoleLog;\n    });\n\n    it(\"should call console.log with provided arguments\", () => {\n      const args = [\"test\", 123, { key: \"value\" }];\n      log(...args);\n\n      expect(mockConsoleLog).toHaveBeenCalledWith(...args);\n    });\n\n    it(\"should handle single argument\", () => {\n      log(\"test\");\n      expect(mockConsoleLog).toHaveBeenCalledWith(\"test\");\n    });\n\n    it(\"should handle multiple arguments\", () => {\n      log(\"test\", 123, true);\n      expect(mockConsoleLog).toHaveBeenCalledWith(\"test\", 123, true);\n    });\n  });\n\n  describe(\"round\", () => {\n    it(\"should round positive numbers correctly\", () => {\n      expect(round(1.4)).toBe(1);\n      expect(round(1.5)).toBe(2);\n      expect(round(1.6)).toBe(2);\n    });\n\n    it(\"should round negative numbers correctly\", () => {\n      expect(round(-1.4)).toBe(-1);\n      expect(round(-1.5)).toBe(-1);\n      expect(round(-1.6)).toBe(-2);\n    });\n\n    it(\"should handle zero values\", () => {\n      expect(round(0)).toBe(0);\n      expect(round(-0)).toBe(-0);\n      expect(1 / round(-0)).toBe(Number.NEGATIVE_INFINITY);\n    });\n\n    it(\"should handle integers\", () => {\n      expect(round(5)).toBe(5);\n      expect(round(-5)).toBe(-5);\n    });\n\n    it(\"should handle decimal places\", () => {\n      expect(round(Math.PI)).toBe(3);\n      expect(round(-Math.PI)).toBe(-3);\n    });\n  });\n});\n"]}