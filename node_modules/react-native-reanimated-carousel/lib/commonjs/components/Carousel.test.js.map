{"version":3,"sources":["Carousel.test.tsx"],"names":["jest","setTimeout","mockPan","fn","realPan","Gesture","Pan","gestureTestId","spyOn","mockImplementation","withTestId","describe","slideWidth","slideHeight","slideCount","beforeEach","mockClear","createMockData","length","Array","from","_","i","createDefaultProps","progressAnimVal","customProps","baseProps","width","height","data","defaultIndex","testID","onProgressChange","createCarousel","progress","Wrapper","React","forwardRef","ref","current","defaultRenderItem","item","index","flex","renderItem","defaultProps","value","swipeToLeftOnce","options","itemWidth","velocityX","state","State","BEGAN","translationX","ACTIVE","END","verifyInitialRender","getByTestId","expect","toBeTruthy","timeout","it","toBe","onSnapToItem","not","toHaveBeenCalled","toHaveBeenCalledWith","WrapperWithCustomProps","defaultScrollOffsetValue","refSetupCallback","getAllByTestId","_pan","pan","toBeNull","startedProgress","onScrollStart","endedProgress","onScrollEnd","offsetProgressVal","absoluteProgressVal","offsetProgress","absoluteProgress","indexes","zIndex","translateX","transform","interpolate","toMatchInlineSnapshot","containerWidth","containerHeight","nextSlide","testId","Carousel","baseOptions","vertical","style","next","props","onLayout","nativeEvent","layout","Promise","resolve"],"mappings":"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","sourcesContent":["import type { FC } from \"react\";\nimport React from \"react\";\nimport type { PanGesture } from \"react-native-gesture-handler\";\nimport { Gesture, State } from \"react-native-gesture-handler\";\nimport Animated, { interpolate, useDerivedValue, useSharedValue } from \"react-native-reanimated\";\nimport type { ReactTestInstance } from \"react-test-renderer\";\n\nimport { act, render, waitFor } from \"@testing-library/react-native\";\nimport { fireGestureHandler, getByGestureTestId } from \"react-native-gesture-handler/jest-utils\";\n\nimport Carousel from \"./Carousel\";\n\nimport type { TCarouselProps } from \"../types\";\n\njest.setTimeout(1000 * 12);\n\nconst mockPan = jest.fn();\nconst realPan = Gesture.Pan();\nconst gestureTestId = \"rnrc-gesture-handler\";\n\njest.spyOn(Gesture, \"Pan\").mockImplementation(() => {\n  mockPan();\n  return realPan.withTestId(gestureTestId);\n});\n\ndescribe(\"Test the real swipe behavior of Carousel to ensure it's working as expected\", () => {\n  const slideWidth = 300;\n  const slideHeight = 200;\n  const slideCount = 4;\n\n  beforeEach(() => {\n    mockPan.mockClear();\n  });\n\n  // Helper function to create mock data\n  const createMockData = (length: number = slideCount) =>\n    Array.from({ length }, (_, i) => `Item ${i + 1}`);\n\n  // Helper function to create default props with correct typing\n  const createDefaultProps = (\n    progressAnimVal: Animated.SharedValue<number>,\n    customProps: Partial<TCarouselProps<string>> = {}\n  ) => {\n    const baseProps: Partial<TCarouselProps<string>> = {\n      width: slideWidth,\n      height: slideHeight,\n      data: createMockData(),\n      defaultIndex: 0,\n      testID: \"carousel-swipe-container\",\n      onProgressChange: progressAnimVal,\n    };\n\n    return {\n      ...baseProps,\n      ...customProps,\n    } as TCarouselProps<string>;\n  };\n\n  // Helper function to create test wrapper\n  const createCarousel = (progress: { current: number }) => {\n    const Wrapper: FC<Partial<TCarouselProps<string>>> = React.forwardRef((customProps, ref) => {\n      const progressAnimVal = useSharedValue(progress.current);\n      const defaultRenderItem = ({\n        item,\n        index,\n      }: {\n        item: string;\n        index: number;\n      }) => (\n        <Animated.View\n          testID={`carousel-item-${index}`}\n          style={{ width: slideWidth, height: slideHeight, flex: 1 }}\n        >\n          {item}\n        </Animated.View>\n      );\n      const { renderItem = defaultRenderItem, ...defaultProps } = createDefaultProps(\n        progressAnimVal,\n        customProps\n      );\n\n      useDerivedValue(() => {\n        progress.current = progressAnimVal.value;\n      }, [progressAnimVal]);\n\n      return <Carousel {...defaultProps} renderItem={renderItem} ref={ref} />;\n    });\n\n    return Wrapper;\n  };\n\n  // Helper function to simulate swipe\n  const swipeToLeftOnce = (\n    options: {\n      itemWidth?: number;\n      velocityX?: number;\n    } = {}\n  ) => {\n    const { itemWidth = slideWidth, velocityX = -slideWidth } = options;\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.25, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.5, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.75, velocityX },\n      { state: State.END, translationX: -itemWidth, velocityX },\n    ]);\n  };\n\n  // Helper function to verify initial render\n  const verifyInitialRender = async (\n    getByTestId: (testID: string | RegExp) => ReactTestInstance\n  ) => {\n    await waitFor(\n      () => {\n        const item = getByTestId(\"carousel-item-0\");\n        expect(item).toBeTruthy();\n      },\n      { timeout: 1000 * 3 }\n    );\n  };\n\n  it(\"`data` prop: should render correctly\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper data={createMockData(6)} />);\n    await verifyInitialRender(getByTestId);\n\n    expect(getByTestId(\"carousel-item-0\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-1\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-2\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-3\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-4\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-5\")).toBeTruthy();\n  });\n\n  it(\"`renderItem` prop: should render items correctly\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(\n      <Wrapper\n        renderItem={({ item, index }) => (\n          <Animated.Text testID={`item-${index}`}>{item}</Animated.Text>\n        )}\n      />\n    );\n\n    await waitFor(() => expect(getByTestId(\"item-0\")).toBeTruthy());\n  });\n\n  it(\"should swipe to the left\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper />);\n    await verifyInitialRender(getByTestId);\n\n    // Test swipe sequence\n    for (let i = 1; i <= slideCount; i++) {\n      swipeToLeftOnce();\n      await waitFor(() => expect(progress.current).toBe(i % slideCount));\n    }\n  });\n\n  it(\"`loop` prop: should swipe back to the first item when loop is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getByTestId } = render(<Wrapper loop />);\n      await verifyInitialRender(getByTestId);\n\n      // Test swipe sequence\n      for (let i = 1; i <= slideCount; i++) {\n        swipeToLeftOnce();\n        await waitFor(() => expect(progress.current).toBe(i % slideCount));\n      }\n    }\n\n    {\n      const { getByTestId } = render(<Wrapper loop={false} />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0 },\n        { state: State.ACTIVE, translationX: slideWidth * 0.25 },\n        { state: State.END, translationX: slideWidth * 0.5 },\n      ]);\n\n      // Because the loop is false, so the the carousel will swipe back to the first item\n      await waitFor(() => expect(progress.current).toBe(0));\n    }\n  });\n\n  it(\"`onSnapToItem` prop: should call the onSnapToItem callback\", async () => {\n    const progress = { current: 0 };\n    const onSnapToItem = jest.fn();\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onSnapToItem={onSnapToItem} />);\n    await verifyInitialRender(getByTestId);\n    expect(onSnapToItem).not.toHaveBeenCalled();\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(1));\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(2));\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(3));\n  });\n\n  it(\"`autoPlay` prop: should swipe automatically when autoPlay is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper autoPlay autoPlayInterval={300} />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(1));\n    await waitFor(() => expect(progress.current).toBe(2));\n    await waitFor(() => expect(progress.current).toBe(3));\n    await waitFor(() => expect(progress.current).toBe(0));\n  });\n\n  it(\"`autoPlayReverse` prop: should swipe automatically in reverse when autoPlayReverse is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper autoPlay autoPlayReverse />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(3));\n    await waitFor(() => expect(progress.current).toBe(2));\n    await waitFor(() => expect(progress.current).toBe(1));\n    await waitFor(() => expect(progress.current).toBe(0));\n  });\n\n  it(\"`defaultIndex` prop: should render the correct item with the defaultIndex props\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper defaultIndex={2} />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(2));\n  });\n\n  it(\"`defaultScrollOffsetValue` prop: should render the correct progress value with the defaultScrollOffsetValue props\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const WrapperWithCustomProps = () => {\n      const defaultScrollOffsetValue = useSharedValue(-slideWidth);\n\n      return <Wrapper defaultScrollOffsetValue={defaultScrollOffsetValue} />;\n    };\n\n    render(<WrapperWithCustomProps />);\n\n    await waitFor(() => expect(progress.current).toBe(1));\n  });\n\n  it(\"`ref` prop: should handle the ref props\", async () => {\n    const Wrapper = createCarousel({ current: 0 });\n    const fn = jest.fn();\n    const WrapperWithCustomProps: FC<{\n      refSetupCallback: (ref: boolean) => void;\n    }> = ({ refSetupCallback }) => {\n      return (\n        <Wrapper\n          ref={(ref) => {\n            refSetupCallback(!!ref);\n          }}\n        />\n      );\n    };\n\n    render(<WrapperWithCustomProps refSetupCallback={fn} />);\n\n    await waitFor(() => expect(fn).toHaveBeenCalledWith(true));\n  });\n\n  it(\"`autoFillData` prop: should auto fill data array to allow loop playback when the loop props is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getAllByTestId } = render(<Wrapper autoFillData data={createMockData(1)} />);\n      await waitFor(() => {\n        expect(getAllByTestId(\"carousel-item-0\").length).toBe(3);\n      });\n    }\n\n    {\n      const { getAllByTestId } = render(<Wrapper autoFillData={false} data={createMockData(1)} />);\n      await waitFor(() => {\n        expect(getAllByTestId(\"carousel-item-0\").length).toBe(1);\n      });\n    }\n  });\n\n  it(\"`pagingEnabled` prop: should swipe to the next item when pagingEnabled is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getByTestId } = render(<Wrapper pagingEnabled={false} />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0, velocityX: -5 },\n        {\n          state: State.ACTIVE,\n          translationX: -slideWidth * 0.15,\n          velocityX: -5,\n        },\n        { state: State.END, translationX: -slideWidth * 0.25, velocityX: -5 },\n      ]);\n\n      await waitFor(() => expect(progress.current).toBe(0));\n    }\n\n    {\n      const { getByTestId } = render(<Wrapper pagingEnabled />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0, velocityX: -1000 },\n        {\n          state: State.ACTIVE,\n          translationX: -slideWidth * 0.15,\n          velocityX: -1000,\n        },\n        {\n          state: State.END,\n          translationX: -slideWidth * 0.25,\n          velocityX: -1000,\n        },\n      ]);\n\n      await waitFor(() => expect(progress.current).toBe(1));\n    }\n  });\n\n  it(\"`onConfigurePanGesture` prop: should call the onConfigurePanGesture callback\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    let _pan: PanGesture | null = null;\n    render(\n      <Wrapper\n        onConfigurePanGesture={(pan) => {\n          _pan = pan;\n          return pan;\n        }}\n      />\n    );\n\n    const { getByTestId } = render(<Wrapper pagingEnabled={false} />);\n    await verifyInitialRender(getByTestId);\n    expect(_pan).not.toBeNull();\n  });\n\n  it(\"`onScrollStart` prop: should call the onScrollStart callback\", async () => {\n    const progress = { current: 0 };\n    let startedProgress: number | undefined;\n    const onScrollStart = () => {\n      if (typeof startedProgress === \"number\") return;\n\n      startedProgress = progress.current;\n    };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onScrollStart={onScrollStart} />);\n    await verifyInitialRender(getByTestId);\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: 1000 },\n      { state: State.ACTIVE, translationX: slideWidth / 2, velocityX: 1000 },\n      { state: State.END, translationX: slideWidth, velocityX: 1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(startedProgress).toBe(0);\n    });\n  });\n\n  it(\"`onScrollEnd` prop: should call the onScrollEnd callback\", async () => {\n    const progress = { current: 0 };\n    let endedProgress: number | undefined;\n    const onScrollEnd = jest.fn(() => {\n      if (typeof endedProgress === \"number\") return;\n\n      endedProgress = progress.current;\n    });\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onScrollEnd={onScrollEnd} />);\n    await verifyInitialRender(getByTestId);\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: 1000 },\n      { state: State.ACTIVE, translationX: slideWidth / 2, velocityX: 1000 },\n      { state: State.END, translationX: slideWidth, velocityX: 1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(endedProgress).toBe(3);\n      expect(onScrollEnd).toHaveBeenCalledWith(3);\n    });\n  });\n\n  it(\"`onProgressChange` prop: should call the onProgressChange callback\", async () => {\n    const offsetProgressVal = { current: 0 };\n    const absoluteProgressVal = { current: 0 };\n    const onProgressChange = jest.fn((offsetProgress, absoluteProgress) => {\n      offsetProgressVal.current = offsetProgress;\n      absoluteProgressVal.current = absoluteProgress;\n    });\n    const Wrapper = createCarousel(offsetProgressVal);\n    const { getByTestId } = render(\n      <Wrapper onProgressChange={onProgressChange} defaultIndex={0} />\n    );\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => {\n      expect(offsetProgressVal.current).toBe(0);\n      expect(absoluteProgressVal.current).toBe(0);\n    });\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: -1000 },\n      { state: State.ACTIVE, translationX: -slideWidth / 2, velocityX: -1000 },\n      { state: State.END, translationX: -slideWidth, velocityX: -1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(offsetProgressVal.current).toBe(-slideWidth);\n      expect(absoluteProgressVal.current).toBe(1);\n    });\n  });\n\n  it(\"`fixedDirection` prop: should swipe to the correct direction when fixedDirection is positive\", async () => {\n    {\n      const progress = { current: 0 };\n      const Wrapper = createCarousel(progress);\n      const { getByTestId } = render(<Wrapper fixedDirection=\"positive\" />);\n      await verifyInitialRender(getByTestId);\n\n      swipeToLeftOnce({ velocityX: slideWidth });\n      await waitFor(() => {\n        expect(progress.current).toBe(3);\n      });\n    }\n\n    {\n      const progress = { current: 0 };\n      const Wrapper = createCarousel(progress);\n      const { getByTestId } = render(<Wrapper fixedDirection=\"negative\" />);\n      await verifyInitialRender(getByTestId);\n\n      swipeToLeftOnce({ velocityX: -slideWidth });\n      await waitFor(() => expect(progress.current).toBe(1));\n    }\n  });\n\n  it(\"`customAnimation` prop: should apply the custom animation\", async () => {\n    const progress = { current: 0 };\n    const indexes: Record<number, number> = {};\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(\n      <Wrapper\n        customAnimation={(value: number, index: number) => {\n          \"worklet\";\n\n          indexes[index] = index;\n\n          const zIndex = interpolate(value, [-1, 0, 1], [10, 20, 30]);\n          const translateX = interpolate(value, [-2, 0, 1], [-slideWidth, 0, slideWidth]);\n\n          return {\n            transform: [{ translateX }],\n            zIndex,\n          };\n        }}\n      />\n    );\n\n    await verifyInitialRender(getByTestId);\n\n    swipeToLeftOnce();\n    await waitFor(() => {\n      expect(progress.current).toBe(1);\n\n      expect(indexes).toMatchInlineSnapshot(`\n        {\n          \"0\": 0,\n          \"1\": 1,\n          \"2\": 2,\n          \"3\": 3,\n        }\n      `);\n    });\n  });\n\n  it(\"`overscrollEnabled` prop: should respect overscrollEnabled=false and prevent scrolling beyond bounds\", async () => {\n    const containerWidth = slideWidth;\n    const containerHeight = containerWidth / 2;\n    const itemWidth = containerWidth / 4;\n\n    let nextSlide: (() => void) | undefined;\n    const testId = \"CarouselAnimatedView\";\n    const progress = { current: 0 };\n    const Carousel = createCarousel(progress);\n    const baseOptions = {\n      vertical: false,\n      width: itemWidth,\n      height: containerHeight,\n      style: {\n        width: containerWidth,\n      },\n      testID: testId,\n    };\n\n    const { getByTestId } = render(\n      <Carousel\n        ref={(ref) => {\n          if (ref) {\n            nextSlide = ref.next;\n          }\n        }}\n        {...baseOptions}\n        loop={false}\n        overscrollEnabled={false}\n        data={createMockData(6)}\n        pagingEnabled={false}\n      />\n    );\n\n    await act(() => {\n      getByTestId(testId).props.onLayout({\n        nativeEvent: {\n          layout: {\n            width: containerWidth,\n            height: containerHeight,\n          },\n        },\n      });\n    });\n\n    await verifyInitialRender(getByTestId);\n\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    // The test logic is that the first screen has four elements\n    await waitFor(() => {\n      expect(progress.current).toBe(0);\n    });\n\n    // After swiping left twice, the last element is close to the right side of the container\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(1);\n    });\n\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(2);\n    });\n\n    // At this point, swiping left again should stay on the last element, meaning this swipe is invalid\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(2);\n    });\n  });\n});\n"]}