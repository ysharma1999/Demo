{"version":3,"sources":["index.tsx"],"names":["Basic","props","activeDotStyle","dotStyle","progress","horizontal","data","size","containerStyle","renderItem","onPress","width","height","Error","justifyContent","alignSelf","flexDirection","map","item","index","length"],"mappings":"iKAAA,yCAGA,oDAEA,gD,yMAcO,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAeC,KAAf,CAAwC,CAC3D,GACEC,CAAAA,cADF,CAUID,KAVJ,CACEC,cADF,CAEEC,QAFF,CAUIF,KAVJ,CAEEE,QAFF,CAGEC,QAHF,CAUIH,KAVJ,CAGEG,QAHF,mBAUIH,KAVJ,CAIEI,UAJF,CAIEA,UAJF,4BAIe,IAJf,mBAKEC,IALF,CAUIL,KAVJ,CAKEK,IALF,CAMEC,IANF,CAUIN,KAVJ,CAMEM,IANF,CAOEC,cAPF,CAUIP,KAVJ,CAOEO,cAPF,CAQEC,UARF,CAUIR,KAVJ,CAQEQ,UARF,CASEC,QATF,CAUIT,KAVJ,CASES,OATF,CAYA,GACE,MAAOH,CAAAA,IAAP,GAAgB,QAAhB,EACA,OAAOJ,QAAP,cAAOA,QAAQ,CAAEQ,KAAjB,IAA2B,QAD3B,EAEA,OAAOR,QAAP,cAAOA,QAAQ,CAAES,MAAjB,IAA4B,QAH9B,CAKE,KAAM,IAAIC,CAAAA,KAAJ,CAAU,oCAAV,CAAN,CAEF,MACE,oBAAC,iBAAD,EACE,KAAK,CAAE,CACL,CACEC,cAAc,CAAE,eADlB,CAEEC,SAAS,CAAE,QAFb,CADK,CAKLV,UAAU,CACN,CACEW,aAAa,CAAE,KADjB,CADM,CAIN,CACEA,aAAa,CAAE,QADjB,CATC,CAYLR,cAZK,CADT,UAgBGF,IAAI,CAACW,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACzB,MACE,oBAAC,8BAAD,EAEE,KAAK,CAAEA,KAFT,CAGE,IAAI,CAAEZ,IAHR,CAIE,KAAK,CAAED,IAAI,CAACc,MAJd,CAKE,QAAQ,CAAEjB,QALZ,CAME,SAAS,CAAEC,QANb,CAOE,UAAU,CAAE,CAACC,UAPf,CAQE,cAAc,CAAEH,cARlB,CASE,OAAO,CAAE,yBAAMQ,CAAAA,QAAN,cAAMA,QAAO,CAAGS,KAAH,CAAb,EATX,UAWGV,UAXH,cAWGA,UAAU,CAAGS,IAAH,CAASC,KAAT,CAXb,EACOA,KADP,CADF,CAeD,CAhBA,CAhBH,EADF,CAoCD,CAxDM,C","sourcesContent":["import { type StyleProp, View, type ViewStyle } from \"react-native\";\nimport type { SharedValue } from \"react-native-reanimated\";\n\nimport React from \"react\";\nimport type { DotStyle } from \"./PaginationItem\";\nimport { PaginationItem } from \"./PaginationItem\";\n\nexport interface BasicProps<T> {\n  progress: SharedValue<number>;\n  horizontal?: boolean;\n  data: Array<T>;\n  renderItem?: (item: T, index: number) => React.ReactNode;\n  containerStyle?: StyleProp<ViewStyle>;\n  dotStyle?: DotStyle;\n  activeDotStyle?: DotStyle;\n  size?: number;\n  onPress?: (index: number) => void;\n}\n\nexport const Basic = <T extends {}>(props: BasicProps<T>) => {\n  const {\n    activeDotStyle,\n    dotStyle,\n    progress,\n    horizontal = true,\n    data,\n    size,\n    containerStyle,\n    renderItem,\n    onPress,\n  } = props;\n\n  if (\n    typeof size === \"string\" ||\n    typeof dotStyle?.width === \"string\" ||\n    typeof dotStyle?.height === \"string\"\n  )\n    throw new Error(\"size/width/height must be a number\");\n\n  return (\n    <View\n      style={[\n        {\n          justifyContent: \"space-between\",\n          alignSelf: \"center\",\n        },\n        horizontal\n          ? {\n              flexDirection: \"row\",\n            }\n          : {\n              flexDirection: \"column\",\n            },\n        containerStyle,\n      ]}\n    >\n      {data.map((item, index) => {\n        return (\n          <PaginationItem\n            key={index}\n            index={index}\n            size={size}\n            count={data.length}\n            dotStyle={dotStyle}\n            animValue={progress}\n            horizontal={!horizontal}\n            activeDotStyle={activeDotStyle}\n            onPress={() => onPress?.(index)}\n          >\n            {renderItem?.(item, index)}\n          </PaginationItem>\n        );\n      })}\n    </View>\n  );\n};\n"]}