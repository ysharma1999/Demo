{"version":3,"sources":["ScrollViewGesture.tsx"],"names":["IScrollViewGesture","props","onConfigurePanGesture","vertical","pagingEnabled","snapEnabled","loop","scrollAnimationDuration","withAnimation","enabled","dataLength","overscrollEnabled","maxScrollDistancePerSwipe","minScrollDistancePerSwipe","fixedDirection","size","common","updateContainerSize","layout","translation","testID","style","onScrollStart","onScrollEnd","onTouchBegin","onTouchEnd","maxPage","isHorizontal","max","panOffset","undefined","touching","validStart","scrollEndTranslation","scrollEndVelocity","containerRef","maxScrollDistancePerSwipeIsSet","minScrollDistancePerSwipeIsSet","getLimit","React","useCallback","measurement","containerWidth","width","measure","withSpring","toValue","onFinished","defaultWithAnimation","type","config","duration","easing","Easing","easeOutQuart","isFinished","runOnJS","dealWithAnimation","endWithSpring","scrollEndTranslationValue","scrollEndVelocityValue","origin","value","velocity","finalTranslation","deceleration","Math","abs","nextPage","round","offset","computed","ceil","floor","page","velocityDirection","sign","withProcessTranslation","finalPage","min","limit","withDecay","onFinish","activeDecay","resetBoundary","onGestureStart","_","onGestureUpdate","e","translationX","translationY","panTranslation","boundary","fixed","dynamic","translationValue","cancelAnimation","onGestureEnd","_success","velocityX","velocityY","totalTranslation","gesture","options","onLayout","nativeEvent","height","children","ScrollViewGesture"],"mappings":"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","sourcesContent":["import type { PropsWithChildren } from \"react\";\nimport React, { useCallback } from \"react\";\nimport type { LayoutChangeEvent, StyleProp, ViewStyle } from \"react-native\";\nimport type {\n  GestureStateChangeEvent,\n  PanGestureHandlerEventPayload,\n} from \"react-native-gesture-handler\";\nimport { GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n  cancelAnimation,\n  measure,\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport { usePanGestureProxy } from \"../hooks/usePanGestureProxy\";\nimport { useGlobalState } from \"../store\";\nimport type { WithTimingAnimation } from \"../types\";\nimport { dealWithAnimation } from \"../utils/deal-with-animation\";\n\ninterface Props {\n  size: number;\n  infinite?: boolean;\n  testID?: string;\n  style?: StyleProp<ViewStyle>;\n  translation: Animated.SharedValue<number>;\n  onLayout?: (e: LayoutChangeEvent) => void;\n  onScrollStart?: () => void;\n  onScrollEnd?: () => void;\n  onTouchBegin?: () => void;\n  onTouchEnd?: () => void;\n}\n\nconst IScrollViewGesture: React.FC<PropsWithChildren<Props>> = (props) => {\n  const {\n    props: {\n      onConfigurePanGesture,\n      vertical,\n      pagingEnabled,\n      snapEnabled,\n      loop,\n      scrollAnimationDuration,\n      withAnimation,\n      enabled,\n      dataLength,\n      overscrollEnabled,\n      maxScrollDistancePerSwipe,\n      minScrollDistancePerSwipe,\n      fixedDirection,\n    },\n    common: { size },\n    layout: { updateContainerSize },\n  } = useGlobalState();\n\n  const {\n    translation,\n    testID,\n    style = {},\n    onScrollStart,\n    onScrollEnd,\n    onTouchBegin,\n    onTouchEnd,\n  } = props;\n\n  const maxPage = dataLength;\n  const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n  const max = useSharedValue(0);\n  const panOffset = useSharedValue<number | undefined>(undefined); // set to undefined when not actively in a pan gesture\n  const touching = useSharedValue(false);\n  const validStart = useSharedValue(false);\n  const scrollEndTranslation = useSharedValue(0);\n  const scrollEndVelocity = useSharedValue(0);\n  const containerRef = useAnimatedRef<Animated.View>();\n  const maxScrollDistancePerSwipeIsSet = typeof maxScrollDistancePerSwipe === \"number\";\n  const minScrollDistancePerSwipeIsSet = typeof minScrollDistancePerSwipe === \"number\";\n\n  // Get the limit of the scroll.\n  const getLimit = React.useCallback(() => {\n    \"worklet\";\n\n    if (!loop && !overscrollEnabled) {\n      const measurement = measure(containerRef);\n      const containerWidth = measurement?.width || 0;\n\n      // If the item's total width is less than the container's width, then there is no need to scroll.\n      if (dataLength * size < containerWidth) return 0;\n\n      // Disable the \"overscroll\" effect\n      return dataLength * size - containerWidth;\n    }\n\n    return dataLength * size;\n  }, [loop, size, dataLength, overscrollEnabled]);\n\n  const withSpring = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: Easing.easeOutQuart,\n        },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        (isFinished: boolean) => {\n          \"worklet\";\n          if (isFinished) onFinished && runOnJS(onFinished)();\n        }\n      );\n    },\n    [scrollAnimationDuration, withAnimation]\n  );\n\n  const endWithSpring = React.useCallback(\n    (\n      scrollEndTranslationValue: number,\n      scrollEndVelocityValue: number,\n      onFinished?: () => void\n    ) => {\n      \"worklet\";\n      const origin = translation.value;\n      const velocity = scrollEndVelocityValue;\n      // Default to scroll in the direction of the slide (with deceleration)\n      let finalTranslation: number = withDecay({ velocity, deceleration: 0.999 });\n\n      // If the distance of the swipe exceeds the max scroll distance, keep the view at the current position\n      if (\n        maxScrollDistancePerSwipeIsSet &&\n        Math.abs(scrollEndTranslationValue) > maxScrollDistancePerSwipe\n      ) {\n        finalTranslation = origin;\n      } else {\n        /**\n         * The page size is the same as the item size.\n         * If direction is vertical, the page size is the height of the item.\n         * If direction is horizontal, the page size is the width of the item.\n         *\n         * `page size` equals to `size` variable.\n         * */\n\n        // calculate target \"nextPage\" based on the final pan position and the velocity of\n        // the pan gesture at termination; this allows for a quick \"flick\" to indicate a far\n        // off page change.\n        const nextPage = -Math.round((origin + velocity * 2) / size);\n\n        if (pagingEnabled) {\n          // we'll never go further than a single page away from the current page when paging\n          // is enabled.\n\n          // distance with direction\n          const offset = -(scrollEndTranslationValue >= 0 ? 1 : -1); // 1 or -1\n          const computed = offset < 0 ? Math.ceil : Math.floor;\n          const page = computed(-origin / size);\n\n          const velocityDirection = -Math.sign(velocity);\n          if (page === nextPage || velocityDirection !== offset) {\n            // not going anywhere! Velocity was insufficient to overcome the distance to get to a\n            // further page. Let's reset gently to the current page.\n            finalTranslation = withSpring(withProcessTranslation(-page * size), onFinished);\n          } else if (loop) {\n            const finalPage = page + offset;\n            finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n          } else {\n            const finalPage = Math.min(maxPage - 1, Math.max(0, page + offset));\n            finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n          }\n        }\n\n        if (!pagingEnabled && snapEnabled) {\n          // scroll to the nearest item\n          finalTranslation = withSpring(withProcessTranslation(-nextPage * size), onFinished);\n        }\n      }\n\n      translation.value = finalTranslation;\n\n      function withProcessTranslation(translation: number) {\n        if (!loop && !overscrollEnabled) {\n          const limit = getLimit();\n          const sign = Math.sign(translation);\n          return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n        }\n\n        return translation;\n      }\n    },\n    [\n      withSpring,\n      size,\n      maxPage,\n      loop,\n      snapEnabled,\n      translation,\n      pagingEnabled,\n      maxScrollDistancePerSwipe,\n      maxScrollDistancePerSwipeIsSet,\n    ]\n  );\n\n  const onFinish = React.useCallback(\n    (isFinished: boolean) => {\n      \"worklet\";\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && runOnJS(onScrollEnd)();\n      }\n    },\n    [onScrollEnd, touching]\n  );\n\n  const activeDecay = React.useCallback(() => {\n    \"worklet\";\n    touching.value = true;\n    translation.value = withDecay({ velocity: scrollEndVelocity.value }, (isFinished) =>\n      onFinish(isFinished as boolean)\n    );\n  }, [onFinish, scrollEndVelocity, touching, translation]);\n\n  const resetBoundary = React.useCallback(() => {\n    \"worklet\";\n    if (touching.value) return;\n\n    if (translation.value > 0) {\n      if (scrollEndTranslation.value < 0) {\n        activeDecay();\n        return;\n      }\n      if (!loop) {\n        translation.value = withSpring(0);\n        return;\n      }\n    }\n\n    if (translation.value < -((maxPage - 1) * size)) {\n      if (scrollEndTranslation.value > 0) {\n        activeDecay();\n        return;\n      }\n      if (!loop) translation.value = withSpring(-((maxPage - 1) * size));\n    }\n  }, [touching, translation, maxPage, size, scrollEndTranslation, loop, activeDecay, withSpring]);\n\n  useAnimatedReaction(\n    () => translation.value,\n    () => {\n      if (!pagingEnabled) resetBoundary();\n    },\n    [pagingEnabled, resetBoundary]\n  );\n\n  function withProcessTranslation(translation: number) {\n    \"worklet\";\n\n    if (!loop && !overscrollEnabled) {\n      const limit = getLimit();\n      const sign = Math.sign(translation);\n      return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n    }\n\n    return translation;\n  }\n\n  const onGestureStart = useCallback(\n    (_: PanGestureHandlerEventPayload) => {\n      \"worklet\";\n\n      touching.value = true;\n      validStart.value = true;\n      onScrollStart && runOnJS(onScrollStart)();\n\n      max.value = (maxPage - 1) * size;\n      if (!loop && !overscrollEnabled) max.value = getLimit();\n\n      panOffset.value = translation.value;\n    },\n    [\n      max,\n      size,\n      maxPage,\n      loop,\n      touching,\n      panOffset,\n      validStart,\n      translation,\n      overscrollEnabled,\n      getLimit,\n      onScrollStart,\n    ]\n  );\n\n  const onGestureUpdate = useCallback(\n    (e: PanGestureHandlerEventPayload) => {\n      \"worklet\";\n\n      if (panOffset.value === undefined) {\n        // This may happen if `onGestureStart` is called as a part of the\n        // JS thread (instead of the UI thread / worklet). If so, when\n        // `onGestureStart` sets panOffset.value, the set will be asynchronous,\n        // and so it may not actually occur before `onGestureUpdate` is called.\n        //\n        // Keeping this value as `undefined` when it is not active protects us\n        // from the situation where we may use the previous value for panOffset\n        // instead; this would cause a visual flicker in the carousel.\n\n        // console.warn(\"onGestureUpdate: panOffset is undefined\");\n        return;\n      }\n\n      if (validStart.value) {\n        validStart.value = false;\n        cancelAnimation(translation);\n      }\n      touching.value = true;\n      const { translationX, translationY } = e;\n\n      let panTranslation = isHorizontal.value ? translationX : translationY;\n\n      if (fixedDirection === \"negative\") panTranslation = -Math.abs(panTranslation);\n      else if (fixedDirection === \"positive\") panTranslation = +Math.abs(panTranslation);\n\n      if (!loop) {\n        if (translation.value > 0 || translation.value < -max.value) {\n          const boundary = translation.value > 0 ? 0 : -max.value;\n          const fixed = boundary - panOffset.value;\n          const dynamic = panTranslation - fixed;\n          translation.value = boundary + dynamic * 0.5;\n          return;\n        }\n      }\n\n      const translationValue = panOffset.value + panTranslation;\n      translation.value = translationValue;\n    },\n    [\n      isHorizontal,\n      max,\n      panOffset,\n      loop,\n      overscrollEnabled,\n      fixedDirection,\n      translation,\n      validStart,\n      touching,\n    ]\n  );\n\n  const onGestureEnd = useCallback(\n    (e: GestureStateChangeEvent<PanGestureHandlerEventPayload>, _success: boolean) => {\n      \"worklet\";\n\n      if (panOffset.value === undefined) {\n        // console.warn(\"onGestureEnd: panOffset is undefined\");\n        return;\n      }\n\n      const { velocityX, velocityY, translationX, translationY } = e;\n      const scrollEndVelocityValue = isHorizontal.value ? velocityX : velocityY;\n      scrollEndVelocity.value = scrollEndVelocityValue; // may update async: see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue#remarks\n\n      let panTranslation = isHorizontal.value ? translationX : translationY;\n\n      if (fixedDirection === \"negative\") panTranslation = -Math.abs(panTranslation);\n      else if (fixedDirection === \"positive\") panTranslation = +Math.abs(panTranslation);\n\n      scrollEndTranslation.value = panTranslation; // may update async: see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue#remarks\n\n      const totalTranslation = scrollEndVelocityValue + panTranslation;\n\n      /**\n       * If the maximum scroll distance is set and the translation `exceeds the maximum scroll distance`,\n       * the carousel will keep the view at the current position.\n       */\n      if (\n        maxScrollDistancePerSwipeIsSet &&\n        Math.abs(totalTranslation) > maxScrollDistancePerSwipe\n      ) {\n        const nextPage =\n          Math.round(\n            (panOffset.value + maxScrollDistancePerSwipe * Math.sign(totalTranslation)) / size\n          ) * size;\n        translation.value = withSpring(withProcessTranslation(nextPage), onScrollEnd);\n      } else if (\n        /**\n         * If the minimum scroll distance is set and the translation `didn't exceeds the minimum scroll distance`,\n         * the carousel will keep the view at the current position.\n         */\n        minScrollDistancePerSwipeIsSet &&\n        Math.abs(totalTranslation) < minScrollDistancePerSwipe\n      ) {\n        const nextPage =\n          Math.round(\n            (panOffset.value + minScrollDistancePerSwipe * Math.sign(totalTranslation)) / size\n          ) * size;\n        translation.value = withSpring(withProcessTranslation(nextPage), onScrollEnd);\n      } else {\n        endWithSpring(panTranslation, scrollEndVelocityValue, onScrollEnd);\n      }\n\n      if (!loop) touching.value = false;\n\n      panOffset.value = undefined;\n    },\n    [\n      size,\n      loop,\n      touching,\n      panOffset,\n      translation,\n      isHorizontal,\n      scrollEndVelocity,\n      scrollEndTranslation,\n      fixedDirection,\n      maxScrollDistancePerSwipeIsSet,\n      maxScrollDistancePerSwipe,\n      maxScrollDistancePerSwipeIsSet,\n      minScrollDistancePerSwipe,\n      endWithSpring,\n      withSpring,\n      onScrollEnd,\n    ]\n  );\n\n  const gesture = usePanGestureProxy({\n    onConfigurePanGesture,\n    onGestureStart,\n    onGestureUpdate,\n    onGestureEnd,\n    options: { enabled },\n  });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      \"worklet\";\n      updateContainerSize({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n      });\n    },\n    [updateContainerSize]\n  );\n\n  return (\n    <GestureDetector gesture={gesture}>\n      <Animated.View\n        ref={containerRef}\n        testID={testID}\n        style={style}\n        onTouchStart={onTouchBegin}\n        onTouchEnd={onTouchEnd}\n        onLayout={onLayout}\n      >\n        {props.children}\n      </Animated.View>\n    </GestureDetector>\n  );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n"]}