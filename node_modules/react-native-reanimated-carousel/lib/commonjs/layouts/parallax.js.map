{"version":3,"sources":["parallax.ts"],"names":["parallaxLayout","baseConfig","modeConfig","size","vertical","parallaxScrollingOffset","parallaxScrollingScale","parallaxAdjacentItemScale","value","translate","zIndex","Math","round","Extrapolation","CLAMP","scale","transform","translateY","translateX","interpolate"],"mappings":"+FAAA,8D,w4DAmCO,QAASA,CAAAA,cAAT,CAAwBC,UAAxB,CAAiF,IAAhCC,CAAAA,UAAgC,2DAAJ,EAAI,CACtF,GAAQC,CAAAA,IAAR,CAA2BF,UAA3B,CAAQE,IAAR,CAAcC,QAAd,CAA2BH,UAA3B,CAAcG,QAAd,CACA,0BAIIF,UAJJ,CACEG,uBADF,CACEA,uBADF,gCAC4B,GAD5B,8CAIIH,UAJJ,CAEEI,sBAFF,CAEEA,sBAFF,iCAE2B,GAF3B,8CAIIJ,UAJJ,CAGEK,yBAHF,CAGEA,yBAHF,gCAG8BD,sBAAsB,EAAI,CAHxD,uBAMA,MAAO,gFAACE,KAAD,CAAmB,CAExB,GAAMC,CAAAA,SAAS,CAAG,uCAChBD,KADgB,CAEhB,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFgB,CAGhB,CAAC,CAACL,IAAD,CAAQE,uBAAT,CAAkC,CAAlC,CAAqCF,IAAI,CAAGE,uBAA5C,CAHgB,CAAlB,CAMA,GAAMK,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAW,uCAAYJ,KAAZ,CAAmB,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAAnB,CAA+B,CAAC,CAAD,CAAIL,IAAJ,CAAU,CAAV,CAA/B,CAA6CU,qCAAcC,KAA3D,CAAX,CAAf,CAEA,GAAMC,CAAAA,KAAK,CAAG,uCACZP,KADY,CAEZ,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFY,CAGZ,CAACD,yBAAD,CAA4BD,sBAA5B,CAAoDC,yBAApD,CAHY,CAIZM,qCAAcC,KAJF,CAAd,CAOA,MAAO,CACLE,SAAS,CAAE,CACTZ,QAAQ,CACJ,CACEa,UAAU,CAAER,SADd,CADI,CAIJ,CACES,UAAU,CAAET,SADd,CALK,CAQT,CACEM,KAAK,CAALA,KADF,CARS,CADN,CAaLL,MAAM,CAANA,MAbK,CAAP,CAeD,CAhCM,kCAEaS,kCAFb,MAKDhB,IALC,yBAKME,uBALN,eAQkEQ,oCARlE,2BAaFN,yBAbE,wBAayBD,sBAbzB,UAmBDF,QAnBC,4IAAP,GAiCD","sourcesContent":["import { Extrapolation, interpolate } from \"react-native-reanimated\";\n\nimport type { IComputedDirectionTypes } from \"../types\";\n\ninterface TBaseConfig {\n  size: number;\n  vertical: boolean;\n}\n\nexport interface ILayoutConfig {\n  /**\n   * control prev/next item offset.\n   * @default 100\n   */\n  parallaxScrollingOffset?: number;\n  /**\n   * control prev/current/next item offset.\n   * @default 0.8\n   */\n  parallaxScrollingScale?: number;\n  /**\n   * control prev/next item offset.\n   * @default Math.pow(parallaxScrollingScale, 2)\n   */\n  parallaxAdjacentItemScale?: number;\n}\n\nexport type TParallaxModeProps = IComputedDirectionTypes<{\n  /**\n   * Carousel Animated transitions.\n   */\n  mode?: \"parallax\";\n  modeConfig?: ILayoutConfig;\n}>;\n\nexport function parallaxLayout(baseConfig: TBaseConfig, modeConfig: ILayoutConfig = {}) {\n  const { size, vertical } = baseConfig;\n  const {\n    parallaxScrollingOffset = 100,\n    parallaxScrollingScale = 0.8,\n    parallaxAdjacentItemScale = parallaxScrollingScale ** 2,\n  } = modeConfig;\n\n  return (value: number) => {\n    \"worklet\";\n    const translate = interpolate(\n      value,\n      [-1, 0, 1],\n      [-size + parallaxScrollingOffset, 0, size - parallaxScrollingOffset]\n    );\n\n    const zIndex = Math.round(interpolate(value, [-1, 0, 1], [0, size, 0], Extrapolation.CLAMP));\n\n    const scale = interpolate(\n      value,\n      [-1, 0, 1],\n      [parallaxAdjacentItemScale, parallaxScrollingScale, parallaxAdjacentItemScale],\n      Extrapolation.CLAMP\n    );\n\n    return {\n      transform: [\n        vertical\n          ? {\n              translateY: translate,\n            }\n          : {\n              translateX: translate,\n            },\n        {\n          scale,\n        },\n      ],\n      zIndex,\n    };\n  };\n}\n"]}