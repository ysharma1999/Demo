{"version":3,"sources":["useInitProps.test.tsx"],"names":["describe","defaultData","defaultProps","data","width","height","renderItem","_item","item","it","result","expect","current","toEqual","objectContaining","defaultIndex","loop","autoPlayInterval","scrollAnimationDuration","enabled","autoFillData","pagingEnabled","snapEnabled","overscrollEnabled","rawData","dataLength","rawDataLength","customProps","stackProps","mode","modeConfig","showLength","toBeDefined","toBe","props","enableSnap"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text } from \"react-native\";\n\nimport { renderHook } from \"@testing-library/react-hooks\";\n\nimport { useInitProps } from \"./useInitProps\";\n\nimport type { TCarouselProps } from \"../types\";\n\ndescribe(\"useInitProps\", () => {\n  const defaultData = [1, 2, 3, 4];\n  const defaultProps: TCarouselProps<number> = {\n    data: defaultData,\n    width: 300,\n    height: 200,\n    renderItem: ({ item: _item }) => <Text>Item</Text>,\n  };\n\n  it(\"should initialize with default values\", () => {\n    const { result } = renderHook(() => useInitProps(defaultProps));\n\n    expect(result.current).toEqual(\n      expect.objectContaining({\n        defaultIndex: 0,\n        loop: true,\n        autoPlayInterval: 1000,\n        scrollAnimationDuration: 500,\n        width: 300,\n        height: 200,\n        enabled: true,\n        autoFillData: true,\n        pagingEnabled: true,\n        snapEnabled: true,\n        overscrollEnabled: true,\n        data: defaultData,\n        rawData: defaultData,\n        dataLength: 4,\n        rawDataLength: 4,\n      })\n    );\n  });\n\n  it(\"should handle custom values\", () => {\n    const customProps: TCarouselProps<number> = {\n      ...defaultProps,\n      defaultIndex: 2,\n      loop: false,\n      autoPlayInterval: 2000,\n      scrollAnimationDuration: 300,\n      enabled: false,\n      autoFillData: false,\n      pagingEnabled: false,\n      snapEnabled: false,\n      overscrollEnabled: false,\n    };\n\n    const { result } = renderHook(() => useInitProps(customProps));\n\n    expect(result.current).toEqual(\n      expect.objectContaining({\n        ...customProps,\n        data: defaultData,\n        rawData: defaultData,\n        dataLength: 4,\n        rawDataLength: 4,\n      })\n    );\n  });\n  it(\"should handle stack mode configuration\", () => {\n    const stackProps: TCarouselProps<number> = {\n      ...defaultProps,\n      mode: \"horizontal-stack\",\n      modeConfig: {\n        showLength: 3,\n      },\n    };\n\n    const { result } = renderHook(() => useInitProps(stackProps));\n\n    expect(result.current.modeConfig).toBeDefined();\n    if (result.current.modeConfig && \"showLength\" in result.current.modeConfig)\n      expect(result.current.modeConfig.showLength).toBe(3); // dataLength - 1\n  });\n\n  it(\"should handle empty data array\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      data: [],\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n\n    expect(result.current.dataLength).toBe(0);\n    expect(result.current.rawDataLength).toBe(0);\n  });\n\n  it(\"should round width and height values\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      width: 300.6,\n      height: 200.4,\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n\n    expect(result.current.width).toBe(301);\n    expect(result.current.height).toBe(200);\n  });\n\n  it(\"should handle enableSnap property\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      enableSnap: false,\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n\n    expect(result.current.snapEnabled).toBe(false);\n  });\n  it(\"should handle vertical-stack mode\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      mode: \"vertical-stack\",\n      modeConfig: {\n        showLength: 3,\n      },\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n    expect(result.current.modeConfig).toBeDefined();\n    if (result.current.modeConfig && \"showLength\" in result.current.modeConfig)\n      expect(result.current.modeConfig.showLength).toBe(3); // dataLength - 1\n  });\n});\n"]}