{"version":3,"sources":["useCarouselController.tsx"],"names":["useCarouselController","options","ref","size","loop","dataLength","handlerOffset","withAnimation","defaultIndex","duration","autoFillData","fixedDirection","globalState","overscrollEnabled","props","containerSize","layout","dataInfo","React","useMemo","length","disable","originalLength","index","sharedIndex","sharedPreIndex","currentFixedPage","useCallback","Math","round","value","fixed","abs","setSharedIndex","newSharedIndex","current","handlerOffsetValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","convertToSharedIndex","runOnJS","getCurrentIndex","realIndex","canSliding","onScrollEnd","onScrollStart","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","Easing","easeOutQuart","dealWithAnimation","next","opts","count","animated","visibleContentWidth","width","nextPage","prev","prevPage","to","direction","offset","totalSize","isCloseToNextLoop","finalOffset","floor","scrollTo","n","useImperativeHandle","getSharedIndex"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { SharedValue, runOnJS, useAnimatedReaction, useSharedValue } from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport { useGlobalState } from \"../store\";\nimport type {\n  ICarouselInstance,\n  TCarouselActionOptions,\n  TCarouselProps,\n  WithTimingAnimation,\n} from \"../types\";\nimport {\n  computedRealIndexWithAutoFillData,\n  convertToSharedIndex,\n} from \"../utils/computed-with-auto-fill-data\";\nimport { dealWithAnimation } from \"../utils/deal-with-animation\";\nimport { handlerOffsetDirection } from \"../utils/handleroffset-direction\";\nimport { round } from \"../utils/log\";\n\ninterface IOpts {\n  ref: React.ForwardedRef<ICarouselInstance>;\n  loop: boolean;\n  size: number;\n  dataLength: number;\n  handlerOffset: SharedValue<number>;\n  autoFillData: TCarouselProps[\"autoFillData\"];\n  withAnimation?: TCarouselProps[\"withAnimation\"];\n  fixedDirection?: TCarouselProps[\"fixedDirection\"];\n  duration?: number;\n  defaultIndex?: number;\n  onScrollStart?: () => void;\n  onScrollEnd?: () => void;\n}\n\nexport interface ICarouselController {\n  getSharedIndex: () => number;\n  prev: (opts?: TCarouselActionOptions) => void;\n  next: (opts?: TCarouselActionOptions) => void;\n  getCurrentIndex: () => number;\n  scrollTo: (opts?: TCarouselActionOptions) => void;\n  index: SharedValue<number>;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n  const {\n    ref,\n    size,\n    loop,\n    dataLength,\n    handlerOffset,\n    withAnimation,\n    defaultIndex = 0,\n    duration,\n    autoFillData,\n    fixedDirection,\n  } = options;\n\n  const globalState = useGlobalState();\n\n  const {\n    props: { overscrollEnabled },\n    layout: { containerSize },\n  } = globalState;\n\n  const dataInfo = React.useMemo(\n    () => ({\n      length: dataLength,\n      disable: !dataLength,\n      originalLength: dataLength,\n    }),\n    [dataLength]\n  );\n\n  const index = useSharedValue<number>(defaultIndex);\n  // The Index displayed to the user\n  const sharedIndex = useRef<number>(defaultIndex);\n  const sharedPreIndex = useRef<number>(defaultIndex);\n\n  const currentFixedPage = React.useCallback(() => {\n    if (loop) return -Math.round(handlerOffset.value / size);\n\n    const fixed = (handlerOffset.value / size) % dataInfo.length;\n    return Math.round(\n      handlerOffset.value <= 0 ? Math.abs(fixed) : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0)\n    );\n  }, [handlerOffset, dataInfo, size, loop]);\n\n  function setSharedIndex(newSharedIndex: number) {\n    sharedIndex.current = newSharedIndex;\n  }\n\n  useAnimatedReaction(\n    () => {\n      const handlerOffsetValue = handlerOffset.value;\n      const toInt = round(handlerOffsetValue / size) % dataInfo.length;\n      const isPositive = handlerOffsetValue <= 0;\n      const i = isPositive ? Math.abs(toInt) : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n      const newSharedIndexValue = convertToSharedIndex({\n        loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData!,\n        index: i,\n      });\n\n      return {\n        i,\n        newSharedIndexValue,\n      };\n    },\n    ({ i, newSharedIndexValue }) => {\n      index.value = i;\n      runOnJS(setSharedIndex)(newSharedIndexValue);\n    },\n    [sharedPreIndex, sharedIndex, size, dataInfo, index, loop, autoFillData, handlerOffset]\n  );\n\n  const getCurrentIndex = React.useCallback(() => {\n    const realIndex = computedRealIndexWithAutoFillData({\n      index: index.value,\n      dataLength: dataInfo.originalLength,\n      loop,\n      autoFillData: autoFillData!,\n    });\n\n    return realIndex;\n  }, [index, autoFillData, dataInfo, loop]);\n\n  const canSliding = React.useCallback(() => {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n\n  const onScrollEnd = React.useCallback(() => {\n    options.onScrollEnd?.();\n  }, [options]);\n\n  const onScrollStart = React.useCallback(() => {\n    options.onScrollStart?.();\n  }, [options]);\n\n  const scrollWithTiming = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const callback = (isFinished: boolean) => {\n        \"worklet\";\n        if (isFinished) {\n          runOnJS(onScrollEnd)();\n          onFinished && runOnJS(onFinished)();\n        }\n      };\n\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: { duration, easing: Easing.easeOutQuart },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(toValue, callback);\n    },\n    [duration, withAnimation, onScrollEnd]\n  );\n\n  const next = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      \"worklet\";\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding()) return;\n\n      if (!loop && index.value >= dataInfo.length - 1) return;\n\n      /* \n      [Overscroll Protection Logic]\n      \n      This section handles the overscroll protection when overscrollEnabled is false.\n      It prevents scrolling beyond the visible content area.\n\n      Example scenario:\n      - Container width: 300px\n      - Item width: 75px (4 items per view)\n      - Total items: 6\n      \n      Initial state (index = 0):\n      [0][1][2][3] | [4][5]\n      visible      | remaining\n\n      After 2 slides (index = 2):\n      [0][1] | [2][3][4][5]\n      hidden | visible\n\n      The visibleContentWidth calculation:\n      - At index 2, remaining items = 4 (items 2,3,4,5)\n      - visibleContentWidth = 4 * 75px = 300px\n      \n      If we try to slide again:\n      - New visibleContentWidth would be: 2 * 75px = 150px (only items 4,5 remain)\n      - Since 150px < container width (300px), the slide is prevented\n      \n      This ensures we don't scroll beyond the last set of fully visible items,\n      maintaining a clean UX without partial item visibility at the edges.\n      */\n      const visibleContentWidth = (dataInfo.length - index.value) * size;\n      if (!overscrollEnabled && !(visibleContentWidth > containerSize.value.width)) {\n        return;\n      }\n\n      onScrollStart?.();\n\n      const nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(-nextPage * size, onFinished) as any;\n      } else {\n        handlerOffset.value = -nextPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      dataInfo,\n      onScrollStart,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ]\n  );\n\n  const prev = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding()) return;\n\n      if (!loop && index.value <= 0) return;\n\n      onScrollStart?.();\n\n      const prevPage = currentFixedPage() - count;\n      index.value = prevPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(-prevPage * size, onFinished);\n      } else {\n        handlerOffset.value = -prevPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      onScrollStart,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ]\n  );\n\n  const to = React.useCallback(\n    (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n      const { i, animated = false, onFinished } = opts;\n\n      if (i === index.value) return;\n\n      if (!canSliding()) return;\n\n      onScrollStart?.();\n      // direction -> 1 | -1\n      const direction = handlerOffsetDirection(handlerOffset, fixedDirection);\n\n      // target offset\n      const offset = i * size * direction;\n      // page width size * page count\n      const totalSize = dataInfo.length * size;\n\n      let isCloseToNextLoop = false;\n\n      if (loop) {\n        isCloseToNextLoop = Math.abs(handlerOffset.value % totalSize) / totalSize >= 0.5;\n      }\n\n      const finalOffset =\n        (Math.floor(Math.abs(handlerOffset.value / totalSize)) + (isCloseToNextLoop ? 1 : 0)) *\n          totalSize *\n          direction +\n        offset;\n\n      if (animated) {\n        index.value = i;\n        handlerOffset.value = scrollWithTiming(finalOffset, onFinished);\n      } else {\n        handlerOffset.value = finalOffset;\n        index.value = i;\n        onFinished?.();\n      }\n    },\n    [\n      size,\n      loop,\n      index,\n      fixedDirection,\n      handlerOffset,\n      dataInfo.length,\n      canSliding,\n      onScrollStart,\n      scrollWithTiming,\n    ]\n  );\n\n  const scrollTo = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { index: i, count, animated = false, onFinished } = opts;\n\n      if (typeof i === \"number\" && i > -1) {\n        to({ i, animated, onFinished });\n        return;\n      }\n\n      if (!count) return;\n\n      const n = Math.round(count);\n\n      if (n < 0) prev({ count: Math.abs(n), animated, onFinished });\n      else next({ count: n, animated, onFinished });\n    },\n    [prev, next, to]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      next,\n      prev,\n      getCurrentIndex,\n      scrollTo,\n    }),\n    [getCurrentIndex, next, prev, scrollTo]\n  );\n\n  return {\n    next,\n    prev,\n    scrollTo,\n    getCurrentIndex,\n    getSharedIndex: () => sharedIndex.current,\n    index,\n  };\n}\n"]}